name: Docker Build and Push

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g., v1.0.0)'
        required: true
        default: 'latest'
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging
        - development
  push:
    tags:
      - 'v*.*.*'

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKER_USERNAME }}/shodan-proxy
        tags: |
          type=semver,pattern={{version}}
          type=raw,value=${{ github.event.inputs.version || 'latest' }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Read CHANGELOG
      if: startsWith(github.ref, 'refs/tags/')
      id: changelog
      run: |
        version=$(echo ${{ github.ref }} | sed 's/refs\/tags\///')
        changelog=$(sed -n "/## \[$version\]/,/## \[/p" CHANGELOG.md | sed '1d;$d')
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        echo "$changelog" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ github.ref_name }}
        body: |
          Changes in this Release:
          ${{ steps.changelog.outputs.changelog }}

          To pull this version of the Docker image, use:
          ```
          docker pull ${{ secrets.DOCKER_USERNAME }}/shodan-proxy:${{ github.ref_name }}
          ```
        draft: false
        prerelease: false
        generate_release_notes: true

    - name: Update Docker Hub Description
      if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        DOCKERHUB_REPOSITORY: liuweitao/shodan-proxy
      run: |
        # Read the content of README-dockerhub.md
        README_CONTENT=$(cat README-dockerhub.md)
        
        # Escape newlines and double quotes
        README_CONTENT="${README_CONTENT//$'\n'/\\n}"
        README_CONTENT="${README_CONTENT//\"/\\\"}"
        
        # Update Docker Hub description
        curl -X PATCH \
          https://hub.docker.com/v2/repositories/${DOCKERHUB_REPOSITORY}/ \
          -H "Authorization: JWT ${DOCKERHUB_PASSWORD}" \
          -H "Content-Type: application/json" \
          -d "{\"full_description\": \"${README_CONTENT}\"}"

    - name: Check README-dockerhub.md exists
      run: |
        if [ ! -f README-dockerhub.md ]; then
          echo "README-dockerhub.md does not exist"
          exit 1
        fi